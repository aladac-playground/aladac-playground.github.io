<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>It&#39;s a feature not a bug</title>
    <description>A random collection of thoughts about stuff
</description>
    <link>https://aladac.github.io/</link>
    <atom:link href="https://aladac.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 04 Apr 2016 01:55:24 +0200</pubDate>
    <lastBuildDate>Mon, 04 Apr 2016 01:55:24 +0200</lastBuildDate>
    <generator>Jekyll v3.0.3</generator>
    
      <item>
        <title>Trying out true freelance</title>
        <description>&lt;!--more--&gt;

&lt;pre&gt;
#!/usr/bin/env ruby
require &#39;freelance&#39;
endeavour = Endeavour.new
begin
  endeavour.begin
rescue Endeavour::CommitmentError, Endeavour::SccuessError
  endevor.effort += 10
  retry
end
&lt;/pre&gt;

&lt;p&gt;During the last couple of months I was contacted twice by representatives of &lt;strong&gt;Toptal&lt;/strong&gt;. Because I was swarmed at my current job I could not properly followup.&lt;/p&gt;

&lt;p&gt;I decided to do some research about &lt;strong&gt;Toptal&lt;/strong&gt; and after liking what I found out I decided to register.&lt;/p&gt;

&lt;p&gt;I tend to experiment a lot in my free time. Sometimes these experiments yield results in form of hobby projects released on github. If I can find the time to do something that is completely pro-bono, why not monetize that time by doing some actual freelance work?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Toptal&lt;/strong&gt; seems like a nice alternative to sites like &lt;code class=&quot;highlighter-rouge&quot;&gt;upwork.com&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;freelancer.com.&lt;/code&gt; I really like how the screening process was put together and can only hope I will successfully pass it.&lt;/p&gt;

&lt;p&gt;I want to give something new a shot. I would really like to succeed in this endeavour a change in perspective is needed every now and then.&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Apr 2016 00:00:00 +0200</pubDate>
        <link>https://aladac.github.io/work/freelance/2016/04/04/trying_out_true_freelance.html</link>
        <guid isPermaLink="true">https://aladac.github.io/work/freelance/2016/04/04/trying_out_true_freelance.html</guid>
        
        
        <category>work</category>
        
        <category>freelance</category>
        
      </item>
    
      <item>
        <title>Back to school: codecademy.com</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/7OGyCaq.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I honestly do not remember how I stumbled upon this site.
Probably found it on either &lt;a href=&quot;https://www.reddit.com/r/programming&quot;&gt;r/programming&lt;/a&gt;
or on &lt;a href=&quot;http://news.ycombinator.com&quot;&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I really like &lt;a href=&quot;http://www.codecademy.com&quot;&gt;Codecademy&lt;/a&gt;. I started poking around
it some time ago, focusing mainly on the Python entry course.&lt;/p&gt;

&lt;p&gt;Recently I returned to the site and done some &lt;a href=&quot;https://www.codecademy.com/en/tracks/javascript&quot;&gt;JavaScript&lt;/a&gt;
and &lt;a href=&quot;https://www.codecademy.com/en/tracks/ruby&quot;&gt;Ruby&lt;/a&gt; examples.&lt;/p&gt;

&lt;p&gt;Even though these were very basic lessons it was still very fun
and satisfying to complete them.&lt;/p&gt;

&lt;p&gt;I intend on coming back to &lt;a href=&quot;http://www.codecademy.com&quot;&gt;Codecademy&lt;/a&gt; to complete
more courses in the near future.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Sep 2015 00:00:00 +0200</pubDate>
        <link>https://aladac.github.io/dev/education/2015/09/17/back_to_school.html</link>
        <guid isPermaLink="true">https://aladac.github.io/dev/education/2015/09/17/back_to_school.html</guid>
        
        
        <category>Dev</category>
        
        <category>Education</category>
        
      </item>
    
      <item>
        <title>I can relate</title>
        <description>&lt;p&gt;Sometimes it is easier to analyze your data models when they are visualized. Whether you analyze your models, collaborate with someone or just plainly need to explain to the customer
how you understood the business concept - diagrams help a lot.&lt;/p&gt;

&lt;p&gt;When things like &lt;code class=&quot;highlighter-rouge&quot;&gt;rdoc&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;sdoc&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;yard&lt;/code&gt; encourage and make documenting your work easier I was wondering if there is a tools that deals with ERM in a similar fashion.&lt;/p&gt;

&lt;p&gt;Well, as I have found out on numerous occasions when dealing with Ruby related issues the answer to most &lt;em&gt;“Wonder if there is a … ?”&lt;/em&gt; questions is &lt;em&gt;“Yup!”&lt;/em&gt;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/SF6UHkN.png&quot; alt=&quot;Rails ERD Example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://rails-erd.rubyforge.org/&quot;&gt;Rails ERD&lt;/a&gt; allows you to generate ERD’s from your existing Models.&lt;/p&gt;

&lt;p&gt;The tool uses &lt;code class=&quot;highlighter-rouge&quot;&gt;graphviz&lt;/code&gt; and is really straighforward to setup.&lt;/p&gt;

&lt;p&gt;After making sure you have &lt;code class=&quot;highlighter-rouge&quot;&gt;graphviz&lt;/code&gt; installed you just modify your projects &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rails-erd&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bundle:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;bundle install&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… and if you already have Models you are set to go.
After issuing:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rake erd&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;… and your first &lt;code class=&quot;highlighter-rouge&quot;&gt;erd.pdf&lt;/code&gt; should be generated in your projects root directory.&lt;/p&gt;

&lt;p&gt;There are several options to choose from. The gem is well documented both &lt;a href=&quot;http://rails-erd.rubyforge.org/customise.html&quot;&gt;command line options wise&lt;/a&gt; and &lt;a href=&quot;http://rails-erd.rubyforge.org/doc/&quot;&gt;API wise&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://rails-erd.rubyforge.org/&quot;&gt;Rails ERD home&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Apr 2014 11:16:50 +0200</pubDate>
        <link>https://aladac.github.io/ruby/ruby%20on%20rails/development/erm/erd/2014/04/10/i-can-relate.html</link>
        <guid isPermaLink="true">https://aladac.github.io/ruby/ruby%20on%20rails/development/erm/erd/2014/04/10/i-can-relate.html</guid>
        
        
        <category>Ruby</category>
        
        <category>Ruby on Rails</category>
        
        <category>Development</category>
        
        <category>ERM</category>
        
        <category>ERD</category>
        
      </item>
    
      <item>
        <title>Everybody shout &quot;Spotify&quot;!</title>
        <description>&lt;p&gt;Okay, so you’ve got your &lt;a href=&quot;https://www.spotify.com&quot;&gt;Spotify&lt;/a&gt; premium account and are in a situation where a device able to play music better than your mobile, tablet or laptop is present.
Sadly, the device neither has a Spotify client, nor uPnP media player or AirPlay capabilities…&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;While wondering how to play music from my laptop on a &lt;strong&gt;Linux MPD server&lt;/strong&gt; that serves as a jukebox I came to one simple conclusion. Stream the music.&lt;/p&gt;

&lt;p&gt;I started a NetRadio and broadcasted the &lt;code class=&quot;highlighter-rouge&quot;&gt;Stereo Mix&lt;/code&gt; from my laptop to the MPD. Voila.&lt;/p&gt;

&lt;p&gt;This way you can play Spotify on a device that lacks native Spotify support, but can play Internet Radio.&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Mar 2013 14:23:57 +0100</pubDate>
        <link>https://aladac.github.io/linux/mac%20os%20x/spotify/mpd/streaming/entertainment/multimedia/2013/03/19/everybody-shout-spotify.html</link>
        <guid isPermaLink="true">https://aladac.github.io/linux/mac%20os%20x/spotify/mpd/streaming/entertainment/multimedia/2013/03/19/everybody-shout-spotify.html</guid>
        
        
        <category>Linux</category>
        
        <category>Mac OS X</category>
        
        <category>Spotify</category>
        
        <category>MPD</category>
        
        <category>Streaming</category>
        
        <category>Entertainment</category>
        
        <category>Multimedia</category>
        
      </item>
    
      <item>
        <title>Yo dawg we heard you like TextMate...</title>
        <description>&lt;p&gt;… so here’s &lt;a href=&quot;https://github.com/garbas/vim-snipmate&quot;&gt;Snipmate&lt;/a&gt; for your Vim so you can &lt;a href=&quot;http://macromates.com/&quot;&gt;TextMate&lt;/a&gt; while you Vim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://macromates.com/&quot;&gt;TextMate&lt;/a&gt; is great. My most favourite TextMate feature are the Snippets.
What is a Snippet? A Snippet is a piece of code that defines the editors helpful behaviour in a given context.
Sounds complicated? Well it’s really not.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Here’s how it works:&lt;/p&gt;

&lt;h3 id=&quot;textmate-snippet-video-example&quot;&gt;TextMate Snippet video example&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/o2iZ6tV.gif&quot; alt=&quot;Textmate Snippet&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The second Snippet used here, namely the &lt;code class=&quot;highlighter-rouge&quot;&gt;opt⇥&lt;/code&gt; looks like this inside:&lt;/p&gt;

&lt;h3 id=&quot;snippet-code-example&quot;&gt;Snippet code example&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-${1:o}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--${2:long-option-name}${6: }&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/^&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;?1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
         &lt;span class=&quot;s2&quot;&gt;&quot;${4:Option description.}&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;vg&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;vg&quot;&gt;$5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This basically defines what to initialy put when
&lt;code class=&quot;highlighter-rouge&quot;&gt;opt⇥&lt;/code&gt;  is entered, and were are the cursor jump points after
the initial template is inserted.&lt;/p&gt;

&lt;p&gt;TextMate is a really cool tool - but it is a commercial tool. One of it’s major competitors &lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt; is also commercial.
Both of those editors are also not exaclty cheap.&lt;/p&gt;

&lt;p&gt;But fear not, there is one reliable piece of software that has been there almost forever for every Unix SysAdmin, SysOp, DevOp, WhateverOp.
I mean off course &lt;strike&gt;Ema...&lt;/strike&gt; &lt;a href=&quot;http://www.vim.org/&quot;&gt;Vim&lt;/a&gt;!&lt;/p&gt;

&lt;h3 id=&quot;things-you-need&quot;&gt;Things you need&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Vim&lt;/li&gt;
  &lt;li&gt;pathogen Vim plugin&lt;/li&gt;
  &lt;li&gt;git&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you don’t already use the &lt;a href=&quot;https://github.com/tpope/vim-pathogen&quot;&gt;pathogen plugin&lt;/a&gt;, do it right now. By the way - &lt;a href=&quot;https://github.com/tpope&quot;&gt;Tim Pope&lt;/a&gt;, the author of pathogen is the goto man for your Vim plugin needs.
Follow the instructions provided by the link above to install the plugin.&lt;/p&gt;

&lt;h3 id=&quot;making-it-work&quot;&gt;Making it work&lt;/h3&gt;

&lt;p&gt;After installing pathogen, you should have you &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.vim/bundle&lt;/code&gt; directory. All you need to do now in your terminal is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.vim/bundle
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git clone https://github.com/garbas/vim-snipmate
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git clone https://github.com/vim-scripts/tlib.git
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git clone https://github.com/vim-scripts/vim-addon-mw-utils.git
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git clone https://github.com/honza/snipmate-snippets.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will download Snipmate and and its dependencies straight into your &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.vim/bundle&lt;/code&gt; directory, from which pathogen will auto-load them once you start Vim.&lt;/p&gt;

&lt;p&gt;And voila:&lt;/p&gt;

&lt;h3 id=&quot;snipmate-snippet-video-example&quot;&gt;Snipmate Snippet video example&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/uliBU7K.gif&quot; alt=&quot;Snipmate Example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After having successfully added the Snippets functionality it would be nice to make Vim a little prettier, by making use of all the 256 colors a modern terminal emulator usually provides and installing a clone of Ryan Bates &lt;em&gt;“railscasts”&lt;/em&gt; color schemes. But that is a subject for another post, another time.&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Mar 2013 14:29:56 +0100</pubDate>
        <link>https://aladac.github.io/linux/unix/vim/editor/textmate/mac%20os%20x/development/2013/03/01/yo-dawg-we-heard-you-like-textmate-dot-dot-dot.html</link>
        <guid isPermaLink="true">https://aladac.github.io/linux/unix/vim/editor/textmate/mac%20os%20x/development/2013/03/01/yo-dawg-we-heard-you-like-textmate-dot-dot-dot.html</guid>
        
        
        <category>Linux</category>
        
        <category>Unix</category>
        
        <category>ViM</category>
        
        <category>Editor</category>
        
        <category>TextMate</category>
        
        <category>Mac OS X</category>
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>Writing Chrome extensions</title>
        <description>&lt;p&gt;I love Google. I truly do. Not because of all the “free” stuff they let you use, but because of the endless supply of development tools and resources one can get from them. Be that &lt;a href=&quot;http://www.google.com/webfonts&quot;&gt;Web Fonts&lt;/a&gt; or &lt;a href=&quot;https://developers.google.com/speed/libraries/&quot;&gt;Hosted libraries&lt;/a&gt; or their &lt;a href=&quot;https://developers.google.com/products/&quot;&gt;SDK’s and API’s&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I recently came across a tutorial on writing your own Chrome extensions, and frankly was surprised how easy it came out be. I recommend reading the &lt;a href=&quot;http://developer.chrome.com/extensions/getstarted.html&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;For a person with even mediocre understanding of HTML and JavaScript it shouldn’t pose a problem to put together a simple extension of their own.&lt;/p&gt;

&lt;p&gt;You start with preparing a &lt;code class=&quot;highlighter-rouge&quot;&gt;manifest.json&lt;/code&gt; file, which pretty much is what its name implies. This describes the extension and by means of the &lt;code class=&quot;highlighter-rouge&quot;&gt;permissions&lt;/code&gt; settings allows for example to bypass &lt;a href=&quot;http://en.wikipedia.org/wiki/Same_origin_policy&quot;&gt;Same origin policy&lt;/a&gt;, shoud you want to use AJAX, but we will focus on something very simple - namely injecting your code into the document loaded in the currently selected tab.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;manifest.json&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A browser action running JQuery on loaded docs DOM&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;background&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;background.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;permissions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://*/*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;browser_action&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Run me!&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;manifest_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we have to fashion up a &lt;code class=&quot;highlighter-rouge&quot;&gt;background.js&lt;/code&gt; file with a listener which will be triggered by the event of pressing the extension button. The triggered action will be loading the &lt;code class=&quot;highlighter-rouge&quot;&gt;jquery.min.js&lt;/code&gt;, and as its callback executing the short JQuery code, which adds the word test at the begining of documents body contents.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;background.js&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onClicked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tabs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;executeScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jquery.min.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tabs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;executeScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(&#39;body&#39;).prepend(&#39;Test&#39;);&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After that you just make sure all the files are saved in the same directory and:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start Chrome&lt;/li&gt;
  &lt;li&gt;open the extensions tab (chrome://extensions)&lt;/li&gt;
  &lt;li&gt;check the developer mode&lt;/li&gt;
  &lt;li&gt;click “load unpacked extension”&lt;/li&gt;
  &lt;li&gt;select your extension directory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;…and that’s the whole shebang. Your extension should be loaded, which will be indicated by the little puzzle piece icon top right corner. After that load up a page and test it. Each time you press it, the word &lt;em&gt;“Test”&lt;/em&gt; wrapped in &lt;code class=&quot;highlighter-rouge&quot;&gt;h1&lt;/code&gt; tags in should be added to the beginning of the documents body.&lt;/p&gt;

&lt;p&gt;That’s hardly a useful extension but you can do much more, for example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;add a nifty download button to a site like YouTube&lt;/li&gt;
  &lt;li&gt;change the looks of pages you visit by hiding parts of them, or changing their looks altogether&lt;/li&gt;
  &lt;li&gt;communicate with Chromes options and features&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are loads of ready &lt;a href=&quot;http://developer.chrome.com/extensions/samples.html&quot;&gt;examples&lt;/a&gt; on the Google Chrome Extensions pages, along with more detailed guides explaining what, when and why.&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Feb 2013 14:58:20 +0100</pubDate>
        <link>https://aladac.github.io/javascript/html/chrome/development/2013/02/21/writing-chrome-extensions.html</link>
        <guid isPermaLink="true">https://aladac.github.io/javascript/html/chrome/development/2013/02/21/writing-chrome-extensions.html</guid>
        
        
        <category>Javascript</category>
        
        <category>HTML</category>
        
        <category>Chrome</category>
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>Android file manager quadrilemma</title>
        <description>&lt;p&gt;There are loads of file manager apps for Android devices. On my Android journey since version 1.0 four have gotten my attention:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.metago.astro&amp;amp;feature=search_result#?t=W251bGwsMSwxLDEsImNvbS5tZXRhZ28uYXN0cm8iXQ..&quot; target=&quot;_blank&quot;&gt;Astro File Manager&lt;/a&gt;&lt;/li&gt;&amp;#13;
&lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.estrongs.android.pop&amp;amp;feature=search_result#?t=W251bGwsMSwxLDEsImNvbS5lc3Ryb25ncy5hbmRyb2lkLnBvcCJd&quot; target=&quot;_blank&quot;&gt;ES File Explorer&lt;/a&gt;&lt;/li&gt;&amp;#13;
&lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.ghisler.android.TotalCommander&amp;amp;feature=search_result#?t=W251bGwsMSwxLDEsImNvbS5naGlzbGVyLmFuZHJvaWQuVG90YWxDb21tYW5kZXIiXQ..&quot; target=&quot;_blank&quot;&gt;Total Commander&lt;/a&gt;&lt;/li&gt;&amp;#13;
&lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=pl.solidexplorer&amp;amp;feature=search_result#?t=W251bGwsMSwxLDEsInBsLnNvbGlkZXhwbG9yZXIiXQ..&quot; target=&quot;_blank&quot;&gt;Solid Explorer&lt;/a&gt;&lt;/li&gt;&amp;#13;

&lt;!-- more --&gt;

&lt;/ul&gt;
&lt;p&gt;In order of appearance one has kind of taken the place of another. I rarely return to Astro to see what new appeared in the most recent version. I still consider ES to be a very good (and free) tool. Mr. Ghisler&#39;s Total Commander was the first shareware application I actually bought (of course it&#39;s free for Android), so I had to check out the Android app too. The most recent addition is Solid Explorer which I so far consider closest to Total Commander.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;All of the apps have what I expect from a mobile file manager:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;archive support&lt;/li&gt;&amp;#13;
&lt;li&gt;network filesystem support&lt;/li&gt;&amp;#13;
&lt;li&gt;list and icon views&lt;/li&gt;&amp;#13;
&lt;li&gt;support for root options&lt;/li&gt;&amp;#13;
&lt;/ul&gt;
&lt;p&gt;I am still evaluating Solid Explorer which provides a 14 day trial. The manager is making a significant impression on me and it is highly likely I will purchase the software since it&#39;s only around 1,5 EUR ($2). &lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://media.tumblr.com/ad0243622101b0fe692de71d3a04c2a7/tumblr_inline_mgdqc0ugOy1r9e7vc.jpg&quot; /&gt;&lt;img src=&quot;http://media.tumblr.com/16ca3ca93bb11c6e82ae9ffc5691e744/tumblr_inline_mgdqc6JQId1r9e7vc.jpg&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Jan 2013 16:00:55 +0100</pubDate>
        <link>https://aladac.github.io/android/mobile/file%20manager/2013/01/09/android-file-manager-quadrilemma.html</link>
        <guid isPermaLink="true">https://aladac.github.io/android/mobile/file%20manager/2013/01/09/android-file-manager-quadrilemma.html</guid>
        
        
        <category>Android</category>
        
        <category>Mobile</category>
        
        <category>File Manager</category>
        
      </item>
    
      <item>
        <title>Reading news the natural way</title>
        <description>&lt;p&gt;I like to have my news sources aggregated when reading on my mobile devices. Up until recently my weapon of choice was &lt;a href=&quot;https://www.pulse.me/&quot; target=&quot;_blank&quot;&gt;Pulse News.&lt;/a&gt; It still is a great reader but it has become a little too bloated for my taste. After a short fling with &lt;a href=&quot;https://www.google.com/producer/currents&quot; target=&quot;_blank&quot;&gt;Google Currents&lt;/a&gt; I have found a suitable replacement for Pulse.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;a href=&quot;http://flipboard.com/&quot; target=&quot;_blank&quot;&gt;Flipboard&lt;/a&gt; is kind of similar to Pulse, in a way that it renders the news articles as &quot;cards&quot; which you can... well flip as pages in a magazine or a book. The interface is horizontal for larger screens and vertical for smaller ones. You can add many different sources as: RSS, Facebook, Twitter, Tumblr or content especially created for Flipboard. &lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The social and blogging adapters allow posting with pictures. In case of Twitter and Facebook they lack most of the functionality of the official clients but are enough to post a reply or a quick tweet.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Just like Pulse, Flipboard offers to store your settings in &quot;the cloud&quot; (boy do I dislike this term, only a little bit less then &quot;web 2.0&quot;).&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;image&quot; src=&quot;http://media.tumblr.com/dbd576b6e9e935a78a108724c8b7d332/tumblr_inline_mg93qlYRQi1r9e7vc.jpg&quot; /&gt;&lt;img alt=&quot;image&quot; src=&quot;http://media.tumblr.com/60cc272d6266d4fc76c6fd5daf402a6d/tumblr_inline_mg93qrX5tb1r9e7vc.jpg&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Jan 2013 15:55:56 +0100</pubDate>
        <link>https://aladac.github.io/ios/android/mobile/application/2013/01/07/reading-news-the-natural-way.html</link>
        <guid isPermaLink="true">https://aladac.github.io/ios/android/mobile/application/2013/01/07/reading-news-the-natural-way.html</guid>
        
        
        <category>iOS</category>
        
        <category>Android</category>
        
        <category>Mobile</category>
        
        <category>Application</category>
        
      </item>
    
      <item>
        <title>Handheld Nintendo praise</title>
        <description>&lt;p&gt;I really have no idea how Nintendo manages to pull this off. My 6 year old DS Lite is one of my favorite gadgets of all time(of all time! thanks Kanye). &lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Currently most smartphones have more CPU/GPU whoomp than the DS Lite, but you just can&#39;t beat the taste of the little Nintendo flavors that come with their handheld consoles. I don&#39;t know about your average DS owner but I bought mine for the content - one I won&#39;t be able to see on any other platform (except maybe running a DS emulator on it). &lt;/p&gt;
&lt;p&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;The games may look less eyecandish than even the previous gen PSP, but the experience is unique for me.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The DS is capable enough to run the kind of games that ran on the N64, 3d and all. But those are not the games I love the DS for. New Super Mario Bros, Mario Kart, the whole Pokemon shebang, the jRPGs.... ah.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;If you want to game on the road, want to game without the need of firing up you PC or the entertainment system of your choice this is a grand toy. And if you happen to have and offspring that is starting to appreciate the fine sport of gaming, you can even have a fine excuse to get yourself a DS :D&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“Daddy what are you playing?”&lt;/li&gt;
  &lt;li&gt;Pokemon, dear&lt;/li&gt;
  &lt;li&gt;“So, you gotta catch’em all?”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tear to my eye ;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://media.tumblr.com/tumblr_mc3uou0SYX1r9e7vc.jpg&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 18 Oct 2012 17:04:16 +0200</pubDate>
        <link>https://aladac.github.io/entertainment/nintendo%20ds/2012/10/18/handheld-nintendo-praise.html</link>
        <guid isPermaLink="true">https://aladac.github.io/entertainment/nintendo%20ds/2012/10/18/handheld-nintendo-praise.html</guid>
        
        
        <category>Entertainment</category>
        
        <category>Nintendo DS</category>
        
      </item>
    
      <item>
        <title>Fire your chaingun and burn rubber</title>
        <description>&lt;p&gt;I finally got my hands on &lt;a href=&quot;http://store.steampowered.com/app/108700/&quot;&gt;Death Rally PC&lt;/a&gt;, and what was supposed to be taking a peak at what it looks like, turned into a 4 hour gaming session :)&lt;/p&gt;

&lt;p&gt;To say that I enjoyed the original would be an understatement. &lt;/p&gt;

&lt;p&gt;I already logged my share of time on the &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.remedy.DeathRallyFREE&amp;amp;hl=pl&quot;&gt;mobile version of Death Rally&lt;/a&gt;, but the PC version is significantly more fun. &lt;/p&gt;

&lt;p&gt;IMHO 7,64 EUR well spent. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://33.media.tumblr.com/tumblr_m8hmkiNBYL1r9e7vc.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Aug 2012 00:00:00 +0200</pubDate>
        <link>https://aladac.github.io/games/2012/08/09/fire_your_chaingun_and_burn_rubber.html</link>
        <guid isPermaLink="true">https://aladac.github.io/games/2012/08/09/fire_your_chaingun_and_burn_rubber.html</guid>
        
        
        <category>Games</category>
        
      </item>
    
  </channel>
</rss>
